// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

// option java_multiple_files = true;
// option java_package = "io.grpc.examples.routeguide";
// option java_outer_classname = "RemoteAttestationProto";
// option objc_class_prefix = "RA";

package remote_attestation;

// Interface exported by the server.
service RemoteAttestation {
  // A simple RPC.
  //
  // Get attestation report
  // 
  // Status is a just a dummy argument and won't be used by the server
  rpc GetAttestation(Status) returns (Report) {}

  // A simple RPC.
  //
  // Send symmetric key encrypted with enclave public key and filenames
  // of training/test data
  rpc SendKey(DataMetadata) returns (Status) {}
}

// Current status of the node
message Status {
  int32 status = 1;
}

// A report returned by the enclave for attestation 
message Report {
  // Public key of enclave 
  uint64 pem_key = 1;

  // Size of public key
  uint32 key_size = 2;

  // Remote report of enclave
  uint64 remote_report = 3;

  // Size of remote report
  uint32 remote_report_size = 4;
}

// Message from client to enclaves with information on how to retrieve
// training/test data
message DataMetadata {
  // Symmetric key used to encrypt data files, encrypted with
  // enclave public key
  uint64 enc_sym_key = 1;

  // Filename of training data
  string training_data_fname = 2;

  // Filename of test data
  string test_data_fname = 3;
}

