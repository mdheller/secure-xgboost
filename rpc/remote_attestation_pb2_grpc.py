# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import remote_attestation_pb2 as remote__attestation__pb2


class RemoteAttestationStub(object):
  """Interface exported by the server.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetAttestation = channel.unary_unary(
        '/remote_attestation.RemoteAttestation/GetAttestation',
        request_serializer=remote__attestation__pb2.Status.SerializeToString,
        response_deserializer=remote__attestation__pb2.Report.FromString,
        )
    self.SendKey = channel.unary_unary(
        '/remote_attestation.RemoteAttestation/SendKey',
        request_serializer=remote__attestation__pb2.DataMetadata.SerializeToString,
        response_deserializer=remote__attestation__pb2.Status.FromString,
        )
    self.SignalStart = channel.unary_unary(
        '/remote_attestation.RemoteAttestation/SignalStart',
        request_serializer=remote__attestation__pb2.Status.SerializeToString,
        response_deserializer=remote__attestation__pb2.Status.FromString,
        )


class RemoteAttestationServicer(object):
  """Interface exported by the server.
  """

  def GetAttestation(self, request, context):
    """A simple RPC.

    Get attestation report

    Status is a just a dummy argument and won't be used by the server
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendKey(self, request, context):
    """A simple RPC.

    Send symmetric key encrypted with enclave public key and filenames
    of training/test data
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SignalStart(self, request, context):
    """A simple RPC.

    Signal to RPC server that the client is ready
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RemoteAttestationServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetAttestation': grpc.unary_unary_rpc_method_handler(
          servicer.GetAttestation,
          request_deserializer=remote__attestation__pb2.Status.FromString,
          response_serializer=remote__attestation__pb2.Report.SerializeToString,
      ),
      'SendKey': grpc.unary_unary_rpc_method_handler(
          servicer.SendKey,
          request_deserializer=remote__attestation__pb2.DataMetadata.FromString,
          response_serializer=remote__attestation__pb2.Status.SerializeToString,
      ),
      'SignalStart': grpc.unary_unary_rpc_method_handler(
          servicer.SignalStart,
          request_deserializer=remote__attestation__pb2.Status.FromString,
          response_serializer=remote__attestation__pb2.Status.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'remote_attestation.RemoteAttestation', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
